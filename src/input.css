@tailwind base;
@tailwind components;
@tailwind utilities;

/* custom css under here */
.overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0,0.5); /* transparent black */
    /* display: none; */
  }

  
  
.modal {
  display: flex;
  flex-direction: column;
  align-items: center;
  position: absolute;
  background-color: white;
  padding: 5px;
  left: 50%;
  top: 25%;
  transform: translate(-50%, -50%);
  width :50%;
  max-width: 48rem;
  border-radius: 0.375rem;
}


.test {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background-color: white;
}

.winning-msg {
  display: flex;
  flex-direction: column;
  align-items: center;
  position: absolute;
  background-color: white;
  padding: 5px;
  left: 50%;
  top: 60%;
  transform: translate(-50%, -50%);
  width :50%;
  max-width: 48rem;
  border-radius: 0.375rem;
}

  

.playerTurnCustom {
  background-color: rgb(206,181,245);
  outline: solid 2px rgb(118,36,249);
}


/* 
This CSS code is using a CSS selector called a sibling combinator (~) 
to target the #confirm-button element when the :hover pseudo-class 
is applied to an element with the class .hover\:confirm-button.

In simpler terms, it means that 
when the mouse is hovered over an element with the class .hover\:confirm-button, 
the style defined in the code block will be applied to the #confirm-button.

 */
.hover\:confirm-button:hover ~ #confirm-button {
  color: #7624f9;
  font-weight: bold ;
  background-color: #FFFFFF;
}


.disabledCustom {
  background-color: rgb(109 40 217);
  color:white;
  /* so element with this class is unclickable */
  pointer-events: none;

}


.errorCustom #addPlayerName{
  background-color: pink;
  border: solid 1px rgb(136,2,2);
}

.errorCustom label{
  color:rgb(136,2,2)
}



